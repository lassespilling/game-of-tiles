// Partials

// Modules
@import "modules/__mixins.scss";
$playerOnePosition: t1;
$playerTwoPosition: t1;

* {
    margin: 0;
    padding: 0;
    font-family: sans-serif;
}

// Sections
.page {
}
.character {
    background: cyan;
    z-index: 6;
    position: relative;
}
.game {
    background: yellow;
}
.results {
    background: magenta;
    z-index: 7;
    position: relative;
    min-height: 100vh;
    display: grid;
    grid-template-rows: 1fr 1fr 1fr;
    grid-template-columns: 1fr;
    & * {
        grid-row-start: 2;
    }
}

// Board


// Buttons
.btn {
    padding: 0.5rem 1rem;
    outline: 0;
    border: 0.1rem solid grey;
    border-radius: 0.5rem;
    text-align: center;
    display: block;
    margin: auto;
}
.btn--play {}
.btn--quit {}
.btn--roll {background: black; color: white;}
.btn--retry {}

// Typography 
.page__heading,
.page__subheading {
    text-align: center;
}

/* ######## CHARACTER SELECTION PAGE ######## */
.character {
    &__container {
        grid-gap: 1rem;
        padding: 1rem;
        clear: both;
        overflow: hidden;
        display: grid;
        @include xl {
            grid-template-columns: repeat(4,1fr);
        }
        @include lg {
            grid-template-columns: repeat(3,1fr);
        }
        @include md {
            grid-template-columns: repeat(2,1fr);
        }
        @include sm {
            grid-template-columns: repeat(1,1fr);
        }
    }
    &__card {
        background: white;
        padding: 2rem;
        border-radius: 0.25rem;
        position: relative;
        &:hover {
            cursor: pointer;
        }
        &--active {
            opacity: 0.8;
            filter: brightness(0.8);
        }
        &--active::after {
            content:"picked";
            position:absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            text-align: center;
            font-weight: bold;
        }
    }
    &__name {
        text-transform: uppercase;
    }
    &__titles,
    &__gender,
    &__birth {
        margin: 0;
        overflow: hidden;
        & [data-type='label'],
        & [data-type='info'] {
            padding: 0.5rem;
            display: inline-block;
            border-radius: 0.25rem;
            margin: 0.1rem;
        }
    }
    &__titles {
        & [data-type='label']{
            background: tint(purple, 50%);
        }
        & [data-type='info'] {
            background: tint(purple, 80%);
        }
    }
    &__gender {
        & [data-type='label']{
            background: tint(orange, 50%);
        }
        & [data-type='info'] {
            background: tint(orange, 80%);
        }
    }

    &__birth {
        & [data-type='label']{
            background: tint(green, 50%);
        }
        & [data-type='info'] {
            background: tint(green, 80%);
        }
    }
}

/* ######## GAME BOARD PAGE ######## */
$tileHeight: 50px;
$dice-size: 3rem;
$dice-transition: 0.5s;
.game {
    padding: 10vh 0;
    max-width: 100vw;
    position: relative;
    overflow: hidden;
    display: grid;
    grid-template-columns: 30vw 40vw 30vw;
    grid-template-rows: minmax(5rem, auto) minmax(5rem, auto) auto;
    grid-template-areas:
    "h h h"
    "s s m"
    "b b m";
    @include sm {
        grid-template-columns: 100vw;
        grid-template-rows: minmax(5rem, auto) minmax(5rem, auto) minmax(5rem, auto) auto;
        grid-template-areas:
        "h h h"
        "m m m"
        "s s s"
        "b b b";
    }
    &__heading {
        grid-area: h;
        margin-bottom: 2rem;
    }
    &__menu {
        grid-area: m;
        display: grid;
        grid-template-rows: 5rem 5rem 5rem auto;
        grid-template-areas: 
        "quit"
        "roll"
        "dice";
    }    
    &__quit {
        grid-area: quit;
    }
    &__roll {
        grid-area: roll;
    }
    &__sidebar {
        grid-area:s;
        width: 100%;
        background: red;
    }
    &__board {
        grid-area:b;
        width: 100%;
        overflow: hidden;
    }
    &__tiles {
        display: grid;
        grid-template-columns: repeat(5,1fr);
        grid-template-rows: repeat(6,$tileHeight);
        width: 100%;
        margin: auto;
        grid-template-areas:
            "t30 t29 t28 t27 t26"
            "t25 t24 t23 t22 t21"
            "t20 t19 t18 t17 t16"
            "t11 t12 t13 t14 t15"
            "t10 t9 t8 t7 t6"
            "t1 t2 t3 t4 t5";
        @include md {
            grid-template-columns: repeat(3,1fr);
            grid-template-rows: repeat(10,8vh);
            grid-template-areas:
            "t28 t29 t30"
            "t25 t26 t27"
            "t24 t23 t22"
            "t19 t20 t21"
            "t18 t17 t16"
            "t13 t14 t15"
            "t12 t11 t10"
            "t7 t8 t9"
            "t6 t5 t4"
            "t1 t2 t3";
        }
        @include sm {
            grid-template-columns: repeat(3,1fr);
            grid-template-rows: repeat(10,8vh);
            grid-template-areas:
            "t28 t29 t30"
            "t25 t26 t27"
            "t24 t23 t22"
            "t19 t20 t21"
            "t18 t17 t16"
            "t13 t14 t15"
            "t12 t11 t10"
            "t7 t8 t9"
            "t6 t5 t4"
            "t1 t2 t3";
        }
    }
    &__tile {
        border: 1px solid black;
        box-sizing: border-box;
        @include tiles($from: 1, $to: 30);
    }
    &__character {
        height: 100%;
        width: 100%;
        display: inline-block;
        margin: auto;
        &--one,
        &--two {
            position: relative;
            &::before {
                content:"";
                display: block;
                margin: 0.5rem;
                width: 2rem;
                height: 2rem;
                position: absolute;
                bottom: 0;
                border-radius: 100%;
            }
            &[data-tile="1"] { grid-area: t1;}
            &[data-tile="2"] { grid-area: t2;}
            &[data-tile="3"] { grid-area: t3;}
            &[data-tile="4"] { grid-area: t4;}
            &[data-tile="5"] { grid-area: t5;}
            &[data-tile="6"] { grid-area: t6;}
            &[data-tile="7"] { grid-area: t7;}
            &[data-tile="8"] { grid-area: t8;}
            &[data-tile="9"] { grid-area: t9;}
            &[data-tile="10"] { grid-area: t10;}
            &[data-tile="11"] { grid-area: t11;}
            &[data-tile="12"] { grid-area: t12;}
            &[data-tile="13"] { grid-area: t13;}
            &[data-tile="14"] { grid-area: t14;}
            &[data-tile="15"] { grid-area: t15;}
            &[data-tile="16"] { grid-area: t16;}
            &[data-tile="17"] { grid-area: t17;}
            &[data-tile="18"] { grid-area: t18;}
            &[data-tile="19"] { grid-area: t19;}
            &[data-tile="20"] { grid-area: t20;}
            &[data-tile="21"] { grid-area: t21;}
            &[data-tile="22"] { grid-area: t22;}
            &[data-tile="23"] { grid-area: t23;}
            &[data-tile="24"] { grid-area: t24;}
            &[data-tile="25"] { grid-area: t25;}
            &[data-tile="26"] { grid-area: t26;}
            &[data-tile="27"] { grid-area: t27;}
            &[data-tile="28"] { grid-area: t28;}
            &[data-tile="29"] { grid-area: t29;}
            &[data-tile="30"] { grid-area: t30;}
        }
        &--one {
            grid-area: t1;
            left: 0;
            @include transition(all 2s ease);
            &::before {
                background: orange;
            }
        }
        &--two {
            grid-area: t1;
            left: 2.5rem;
            @include transition(all 2s ease);
            &::before {
                background: blue;
            }
        }
    }
}
.dicecontainer {
    grid-area: dice;
    perspective: 15rem;
    transform-origin: center center;
    z-index: 5;
    &__dice {
        transform-style: preserve-3d;
        transform-origin: center center;
        width: $dice-size;
        height: $dice-size;
        position: relative;
        @include transition(all $dice-transition ease);
        border-radius: 1rem;
        cursor: pointer;
        & i {
            border-radius: 100%;
            background: black;
            display: block;
            width: 0.5rem;
            height: 0.5rem;
            margin: auto;
            align-content: center;
            align-self: center;
        }
        &--1,
        &--2,
        &--3,
        &--4,
        &--5,
        &--6 {
            height: $dice-size;
            width: $dice-size;
            display: block;
            display: grid;
            position: absolute;
            &::before {
                content:"";
                position: absolute;
                width: $dice-size;
                height: $dice-size;
                z-index: -2;
            }
            &::after {
                content:"";
                position: absolute;
                width: $dice-size;
                height: $dice-size;
                background: white;
                border-radius: $dice-size/3;
                z-index: -1;
            }
        }
        &--1 {
            grid-template-columns: repeat(5,1fr);
            grid-template-rows: repeat(5,1fr);
            grid-template-areas:
            ". . . . ."
            ". . . . ."
            ". . a . ."
            ". . . . ."
            ". . . . .";
            & i:nth-of-type(1) { grid-area: a; }
            transform: rotateY(0deg) translateZ($dice-size/2);
        }
        &--2 {
            grid-template-columns: repeat(5,1fr);
            grid-template-rows: repeat(5,1fr);
            grid-template-areas:
            ". . . . ."
            ". a . . ."
            ". . . . ."
            ". . . b ."
            ". . . . .";
            & i:nth-of-type(1) { grid-area: a; }
            & i:nth-of-type(2) { grid-area: b; }
            transform: rotateY(180deg) translateZ($dice-size/2);
        }
        &--3 {
            grid-template-columns: repeat(5,1fr);
            grid-template-rows: repeat(5,1fr);
            grid-template-areas:
            ". . . . ."
            ". a . . ."
            ". . b . ."
            ". . . c ."
            ". . . . .";
            & i:nth-of-type(1) { grid-area: a; }
            & i:nth-of-type(2) { grid-area: b; }
            & i:nth-of-type(3) { grid-area: c; }
            transform: rotateX( 90deg) translateZ($dice-size/2);
        }
        &--4 {
            grid-template-columns: repeat(5,1fr);
            grid-template-rows: repeat(5,1fr);
            grid-template-areas:
            ". . . . ."
            ". a . b ."
            ". . . . ."
            ". c . d ."
            ". . . . .";
            & i:nth-of-type(1) { grid-area: a; }
            & i:nth-of-type(2) { grid-area: b; }
            & i:nth-of-type(3) { grid-area: c; }
            & i:nth-of-type(4) { grid-area: d; }
            transform: rotateY(-90deg) translateZ($dice-size/2);
        }
        &--5 {
            grid-template-columns: repeat(5,1fr);
            grid-template-rows: repeat(5,1fr);
            grid-template-areas:
            ". . . . ."
            ". a . b ."
            ". . c . ."
            ". d . e ."
            ". . . . .";
            & i:nth-of-type(1) { grid-area: a; }
            & i:nth-of-type(2) { grid-area: b; }
            & i:nth-of-type(3) { grid-area: c; }
            & i:nth-of-type(4) { grid-area: d; }
            & i:nth-of-type(5) { grid-area: e; }
            transform: rotateY( 90deg) translateZ($dice-size/2);
            z-index: 99;
        }
        &--6 {
            grid-template-columns: repeat(5,1fr);
            grid-template-rows: repeat(5,1fr);
            grid-template-areas:
            ". . . . ."
            ". a b c ."
            ". . . . ."
            ". d e f ."
            ". . . . .";
            & i:nth-of-type(1) { grid-area: a; }
            & i:nth-of-type(2) { grid-area: b; }
            & i:nth-of-type(3) { grid-area: c; }
            & i:nth-of-type(4) { grid-area: d; }
            & i:nth-of-type(5) { grid-area: e; }
            & i:nth-of-type(6) { grid-area: f; }
            transform: rotateX(-90deg) translateZ($dice-size/2);
        }
    }
    &__dice--one
    &__dice--two,
    &__dice--three,
    &__dice--four,
    &__dice--five,
    &__dice--six {
        @include transition(all $dice-transition ease);
    }
    &__roller {
        transform-style: preserve-3d;
        transform-origin: center center;
        width: 3rem;
        height: 3rem;
        position: relative;
        display: inline-block;
        @include transition(all 1s ease);
        pointer-events: none;
        
    }
    &__dice--throwone {
        transform: rotateY(0deg) translateZ(1rem);
    }
    &__dice--throwtwo {
        transform: rotateY(180deg) translateZ(1rem);
    }
    &__dice--throwthree {
        transform: rotateX(-90deg) translateZ(1rem);
    }
    &__dice--throwfour {
        transform: rotateY(90deg) translateZ(1rem);
    }
    &__dice--throwfive {
        transform: rotateY(-90deg) translateZ(1rem);
    }
    &__dice--throwsix {
        transform: rotateX(90deg) translateZ(1rem);
    }
}